name: Build generate push
on: [push]
jobs:
  list-modules:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
      changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v36
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          files_ignore: .github/**
      - name: Determine changed modules
        id: set-dirs
        # List all repos that contain a go.mod file.
        run: |
          modules=$(for changed_dir in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo $(go list -f '{{.Module.Dir}}' "./$changed_dir")
          done | sort -u)
          echo $modules
          dir=$(for module in $modules; do
            rel=${module#"$PWD/"}
            echo "$rel"
          done | sort -u | jq -R -s -c 'split("\n")[0:-1]')
          echo "dir=$dir" >> $GITHUB_OUTPUT
          echo $dir

  build-modules:
    if: needs.list-modules.outputs.changed == 'true'
    runs-on: ubuntu-latest
    needs: [list-modules]
    continue-on-error: true
    strategy:
      max-parallel: 5
      matrix:
        dir: ${{needs.list-modules.outputs.dir != '' && fromJson(needs.list-modules.outputs.dir)}}
    steps:
      - name: Start lib
        run: echo Building ${{ matrix.dir }}
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
          cache-dependency-path: ${{ matrix.dir }}/go.mod

      - name: Build
        run: make all DIR=${{ matrix.dir }}

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ matrix.dir }}
          args: --timeout 5m
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Test
        run: make test DIR=${{ matrix.dir }}
